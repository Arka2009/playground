diff --git a/build.sc b/build.sc
index a6f9677..86dac27 100644
--- a/build.sc
+++ b/build.sc
@@ -51,7 +51,12 @@ class hardfloat extends ScalaModule with SbtModule with PublishModule { m =>
   )
 
   object test extends Tests {
-    def ivyDeps = Agg(v.scalatest, v.scalapar)
+    def ivyDeps = Agg(v.scalatest) ++ {
+      if (scalaVersion().split('.')(1).toInt == 13)
+        Agg(v.scalapar)
+      else
+        Agg()
+    }
     def testFramework = "org.scalatest.tools.Framework"
   }
 
diff --git a/src/test/scala/FMATester.scala b/src/test/scala/FMATester.scala
index 582f67c..f750542 100644
--- a/src/test/scala/FMATester.scala
+++ b/src/test/scala/FMATester.scala
@@ -8,8 +8,22 @@ import firrtl.AnnotationSeq
 import firrtl.options.TargetDirAnnotation
 import firrtl.stage.OutputFileAnnotation
 import scala.sys.process.{Process, ProcessLogger}
-import scala.collection.parallel.CollectionConverters._
 
+private[test] object CompatParColls {
+  val Converters = {
+    import Compat._
+
+    {
+      import scala.collection.parallel._
+
+      CollectionConverters
+    }
+  }
+
+  object Compat {
+    object CollectionConverters
+  }
+}
 
 trait FMATester extends HardfloatTester {
   def check(stdouts: Seq[String]) = {
@@ -93,6 +107,7 @@ trait FMATester extends HardfloatTester {
 
     (if (dutArgs.isDefined) {
       require(softfloatArgs.size == dutArgs.get.size, "size of softfloatArgs and dutArgs should be same.")
+      import CompatParColls._
       (softfloatArgs zip dutArgs.get).par.map { case (s, d) => executeAndLog(s, d)}
     } else softfloatArgs.par.map{s => executeAndLog(s, Seq.empty)}).seq
   }
